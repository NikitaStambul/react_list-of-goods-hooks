{"version":3,"sources":["App.tsx","components/goodsList/goodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","resetAvailable","visibleGoods","sort","current","next","ALPHABET","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","classNames","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDLAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAiCE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAiBF,GAAcF,IAAaT,EAASQ,KACrDM,EA/BD,SACLZ,EACAO,EACAE,GAEA,IAAMG,EAAY,YAAOZ,GAmBzB,OAjBAY,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQR,GACN,KAAKT,EAASkB,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAQP,GAAYQ,EAAKR,GAElC,QACE,OAAO,MAITE,GACFG,EAAaO,UAGRP,EAOcQ,CAAkBjB,EAAiBI,EAAUE,GAmBlE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAlBmB,WACzBf,EAAYV,EAASkB,WAkBfK,UAAWG,IACT,iBACA,CAAE,WAAYjB,IAAaT,EAASkB,WALxC,iCAWA,wBACEM,KAAK,SACLC,QAzBa,WACnBf,EAAYV,EAASoB,SAyBfG,UAAWG,IACT,oBACA,CAAE,WAAYjB,IAAaT,EAASoB,SALxC,4BAWA,wBACEI,KAAK,SACLC,QA5CY,WAClBb,GAAc,SAAAI,GAAO,OAAKA,MA4CpBO,UAAWG,IACT,oBACA,CAAE,YAAaf,IALnB,qBAWCE,GACC,wBACEW,KAAK,SACLC,QA5CS,WACjBb,GAAc,GACdF,EAAYV,EAASQ,OA2Cbe,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWrB,MAAOY,QEvHxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6d370f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/goodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((current, next) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return current.localeCompare(next);\n\n      case SortType.LENGTH:\n        return current[sortType] - next[sortType];\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const resetAvailable = isReversed || sortType !== SortType.NONE;\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const reverseList = () => {\n    setIsReversed(current => !current);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const resetOrder = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortAlphabetically}\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverseList}\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {resetAvailable && (\n          <button\n            type=\"button\"\n            onClick={resetOrder}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  goods: string[]\n}\n\nexport const GoodsList: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}